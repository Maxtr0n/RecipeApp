services:
  recipe.api:
    image: schutzmate/recipeapi:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Postgres=Host=recipe.database;Port=5432;Database=RecipeDb;Username=postgres;Password=Secret12345!;
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://recipe.dashboard:18889
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=recipe.api
    depends_on:
      recipe.database:
        condition: service_healthy
      keycloak:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 20s
      timeout: 20s
      retries: 5

  recipe.database:
    image: postgres:18
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Secret12345!
      - POSTGRES_DB=RecipeDb
    volumes:
      - recipe-db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d RecipeDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  recipe.dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - keycloak-data:/opt/keycloak/data

volumes:
  recipe-db:
  keycloak-data:

# otel-collector:
#   image: otel/opentelemetry-collector-contrib:0.135.0
#   container_name: otel-collector
#   command: [ "--config=/etc/otel-collector-config.yaml" ]
#   volumes:
#     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
#   ports:
#     - "8889:8889" # Prometheus metrics exposed here
#     - "13133:13133" # health_check extension
#     - "4317:4317" # OTLP gRPC receiver
#     - "4318:4318" # OTLP http receiver

#   prometheus:
#     image: prom/prometheus
#     container_name: prometheus
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yaml'
#     ports:
#       - "9090:9090"
#     restart: unless-stopped
#     volumes:
#       - ./prometheus:/etc/prometheus
#       - prom_data:/prometheus

#   grafana:
#       image: grafana/grafana-enterprise
#       container_name: grafana
#       ports:
#         - "3000:3000"
#       restart: unless-stopped
#       environment:
#         - GF_SECURITY_ADMIN_USER=admin
#         - GF_SECURITY_ADMIN_PASSWORD=grafana
#       volumes:
#       - grafana-storage:/var/lib/grafana

# volumes:
#     prom_data:
#     grafana-storage:
